# https://dev.azure.com
#
# Build, Test and Deploys the Secrets Service to Production

trigger:
  paths:
    include:
      - src/SecretsService/*

resources:
  - repo: self

variables:
  kubernetesCluster: "acm-notes-aks"
  azureResourceGroup: "acm-notes"

jobs:
  - job: UnitTest
    displayName: Build Image
    pool:
      vmImage: "ubuntu-latest"
    steps:
      - task: DotNetCoreInstaller@0
        inputs:
          version: "3.0.100"
      - script: dotnet build ./src/SecretsService/SecretsService.csproj

  - job: PushAndDeployImage
    dependsOn:
      - UnitTest
    condition: and(succeeded('UnitTest'), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
    displayName: Push And Deploy Image
    pool:
      vmImage: "ubuntu-latest"
    steps:
      - task: DockerInstaller@0
        inputs:
          dockerVersion: "18.06.1-ce"

      - task: HelmInstaller@1
        inputs:
          helmVersionToInstall: "latest"

      - script: docker login -u $(DOCKER_USER) -p $(DOCKER_PASS) acmnotesregistry.azurecr.io
        displayName: "Login"

      - script: ./src/SecretsService/Scripts/docker-build-push.sh
        displayName: "Build and Push Secrets Service"

      - task: HelmDeploy@0
        displayName: Helm Init
        inputs:
          connectionType: "Azure Resource Manager"
          azureSubscriptionEndpoint: "$(AZURE_SUBSCRIPTION)"
          azureResourceGroup: "$(azureResourceGroup)"
          kubernetesCluster: "$(kubernetesCluster)"
          useClusterAdmin: true
          namespace: "secrets"
          command: "init"
          arguments: "--service-account tiller --history-max 200 --wait"

      - task: HelmDeploy@0
        displayName: Helm Deploy to Secrets Space
        inputs:
          connectionType: "Azure Resource Manager"
          azureSubscriptionEndpoint: "$(AZURE_SUBSCRIPTION)"
          azureResourceGroup: "$(azureResourceGroup)"
          kubernetesCluster: "$(kubernetesCluster)"
          chartName: "./src/SecretsService/charts/secretsservice"
          releaseName: "secretsservice"
          command: upgrade
          arguments: -i --force --namespace secrets
